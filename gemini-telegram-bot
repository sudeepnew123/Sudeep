import os
import logging
import google.generativeai as genai
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from flask import Flask
import threading

# Logging setup
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# Load secrets
BOT_TOKEN = os.getenv("BOT_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

# Gemini API setup
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("models/gemini-pro")  # FIXED: Added 'models/' prefix

def get_ai_response(user_message: str) -> str:
    try:
        response = model.generate_content(user_message)
        return response.text
    except Exception as e:
        return f"AI Error: {e}"

# Telegram bot commands
def start(update: Update, context: CallbackContext):
    update.message.reply_text("Hi! I'm a Gemini AI bot. Send me a message!")

def help_command(update: Update, context: CallbackContext):
    update.message.reply_text("Send any message and Iâ€™ll reply using Gemini AI.")

def handle_message(update: Update, context: CallbackContext):
    user_message = update.message.text
    ai_response = get_ai_response(user_message)
    update.message.reply_text(ai_response)

def error_handler(update: Update, context: CallbackContext):
    logger.error(msg="Exception while handling update:", exc_info=context.error)

# Bot setup in thread
def run_bot():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    dp.add_error_handler(error_handler)

    updater.start_polling()
    updater.idle()

# Flask app for Render
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running with Gemini AI!"

if __name__ == '__main__':
    threading.Thread(target=run_bot).start()
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))
